version: "3.3"

services:
  api-gateway:
    container_name: app_api_gateway
    build:
      context: ./api-gate-way/OcelotGateway
      dockerfile: Dockerfile
    networks:
      - app
    ports:
      - "8084:8084"
    depends_on:
      - tour-service
      - booking-service
      - notification-service
      - payment-service
    restart: unless-stopped
    environment:
      - ASPNETCORE_URLS=http://+:8084
      - ASPNETCORE_ENVIRONMENT=Development

  auth-service:
    container_name: app_auth_service
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    networks:
      - app
    env_file:
      - ./auth-service/.env
    ports:
      - "3001:3001"
      - "50058:50058"
    depends_on:
      - postgres
      - redis
      - user-service
    restart: unless-stopped

  user-service:
    container_name: app_user_service
    build:
      context: ./user-service
      dockerfile: Dockerfile
    networks:
      - app
    env_file:
      - ./user-service/.env
    ports:
      - "3002:3002"
      - "50052:50052"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  payment-service:
    container_name: app_payment_service
    build:
      context: ./payment-service
      dockerfile: PaymentService.Api/Dockerfile
    networks:
      - app
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  tour-service:
    container_name: app_tour_service
    build:
      context: ./tour-service/.
      dockerfile: Dockerfile
    networks:
      - app
    env_file:
      - ./tour-service/cmd/.env
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    ports:
      - "8083:8083"
      - "50051:50051"

  booking-service:
    container_name: app_booking_service
    build:
      context: ./booking-service/.
      dockerfile: Dockerfile
    networks:
      - app
    env_file:
      - ./booking-service/cmd/.env
    restart: unless-stopped
    depends_on:
      - postgres
      - tour-service
      - redis
    ports:
      - "8081:8081"

  notification-service:
    container_name: app_notification_service
    build:
      context: ./notification-service/.
      dockerfile: Dockerfile
    networks:
      - app
    # env_file:
    #   - ./notification-service/cmd/.env
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    ports:
      - "8082:8082"

  postgres:
    container_name: app_postgres
    image: postgres
    networks:
      - app
    environment:
      POSTGRES_DB: trekking_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    ports:
      - "5432:5432"

  redis:
    container_name: app_redis
    image: redis
    networks:
      - app
    volumes:
      - ./redis-data:/data
    restart: unless-stopped
    ports:
      - "6379:6379"

  nginx:
     image: nginx:latest
     ports:
       - "80:80"
     volumes:
       - ./nginx.conf:/etc/nginx/conf.d/default.conf


networks:
  app: